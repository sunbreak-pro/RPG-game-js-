import{s as p,a as u,b as g,d as v,c as k,g as L}from"./item-DxGzUuUr.js";const S=async e=>{if(!e||e.trim()==="")return console.log(e),console.warn("[LOAD] 無効なプレイヤー名"),null;console.log("[LOAD]",e,"のデータを読み込み中...");try{const n=v(k,"saves",e),a=await L(n);if(!a.exists())return console.log("[LOAD]",e,"のセーブデータが存在しません"),null;const o=a.data();return console.log("[LOAD] データ読み込み成功:",o),o}catch(n){return console.error("[LOAD ERROR]",n),null}};async function A(e,n){const a=document.getElementById("alert-msg"),o=document.getElementById("player-name-input");console.log("[DEBUG] nameInput:",o);const l=o==null?void 0:o.value.trim();if(console.log("[DEBUG] 入力された名前:",l),!l||l.length<1||l.length>8){a.textContent="名前は１文字以上、もしくは8文字以内に設定してください";return}if(!/^[ぁ-んァ-ン一-龥a-zA-Z0-9ー]+$/.test(l)){a.textContent="使用できない文字が含まれています（日本語・英数字のみ可）";return}const t=await S(l);if(t&&t.playerName){const s={playerName:t.playerName,hp:t.hp,maxHp:t.maxHp,mp:t.mp,maxMp:t.maxMp,physicalStrength:t.physicalStrength,magicalStrength:t.magicalStrength,defense:t.defense,speed:t.speed,isPlayer:t.isPlayer,inventory:t.inventory,equipment:t.equipment,skills:t.skills,currentStage:t.currentStage,deathCount:t.deathCount,lastClearedFloor:t.lastClearedFloor};console.log("[LOAD OK]",s),await p(s),localStorage.setItem("playerData",JSON.stringify(s))}else{const s=e.map(d=>({...u[d],amount:1})),r=n.map(d=>({...g[d],amount:1})),c={playerName:l,maxHp:100,hp:100,maxMp:40,mp:40,physicalStrength:20,magicalStrength:20,defense:10,speed:10,isPlayer:!0,inventory:r,equipment:s,skills:[],currentStage:1,deathCount:0,lastClearedFloor:0};console.log("[NEW PLAYER]",c),await p(c),localStorage.setItem("playerData",JSON.stringify(c))}setTimeout(()=>{window.location.href="battleDisplay.html"},200)}if(!location.pathname.includes("/"))throw console.warn("safezone.ts は index.html 上でのみ実行される想定です"),new Error("safezone.ts を中断します");const i=document.getElementById("lobby"),f=document.getElementById("select-player-area"),h=document.getElementById("shop-area"),E=document.getElementById("cooking-area"),D=document.getElementById("cooking-btn"),C=document.querySelectorAll(".safety-area-btn"),O=document.getElementById("shop-btn"),x=document.getElementById("prepare-battle-btn");x.addEventListener("click",()=>{i.style.display="none",f.style.display="block"});C.forEach(e=>{e.addEventListener("click",()=>{i.style.display="block",f.style.display="none",h.style.display="none",E.style.display="none"})});O.addEventListener("click",()=>{h.style.display="block",i.style.display="none"});D.addEventListener("click",()=>{i.style.display="none",E.style.display="block"});const I=[],b=[],q=document.getElementById("equipment-options"),P=document.getElementById("heal-item-options"),M=u.filter(e=>e.rarity==="common"),H=g.filter(e=>e.rarity==="common");B(M,q,I,2);B(H,P,b,2);document.addEventListener("DOMContentLoaded",()=>{const e=document.getElementById("start-button-buttle");e?e.addEventListener("click",()=>{A(I,b)}):console.warn("start-button-buttle が見つかりませんでした")});function B(e,n,a,o){e.forEach((l,t)=>{const s=document.createElement("button");s.textContent=l.itemName,s.addEventListener("click",()=>{const r=a.indexOf(t);if(r!==-1)a.splice(r,1),s.classList.remove("selected-class");else{if(a.length>=o){alert(`最大${o}つまで選べます`);return}a.push(t),s.classList.add("selected-class")}}),n.appendChild(s)})}const w=document.getElementById("loading-area"),m=document.getElementById("loading-tittle"),y={show(e){m.animate([{opacity:0,transform:"translateY(-10rem)"},{opacity:1,transform:"translateY(0)"}],{duration:1e3,easing:"ease",fill:"forwards"}).onfinish=()=>{e()}},loading(e){let n=0;const a=setInterval(()=>{if(n+=3,n>100){clearInterval(a),e();return}const o=`linear-gradient(to right, red 0%, red ${n}%, #a5a5a5 ${n}%, #a5a5a5 100%)`;m.style.backgroundImage=o},50)},end(){m.animate([{opacity:1,transform:"translateY(0)"},{opacity:0,transform:"translateY(10rem)"}],{duration:1e3,easing:"ease",fill:"forwards"}),setTimeout(()=>{w.animate({opacity:[1,0],visibility:"hidden"},{duration:1e3,easing:"ease",fill:"forwards"})},500);const e=document.getElementById("main-content");e.style.display="block"}};async function R(){try{await new Promise(e=>y.show(e)),await new Promise(e=>y.loading(e)),await new Promise(e=>setTimeout(e,500))}catch(e){console.error("データの読み込みに失敗しました:",e)}finally{y.end()}}document.addEventListener("DOMContentLoaded",()=>{w.style.display="flex",console.log("ロード開始"),R()});
